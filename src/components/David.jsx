/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: Nikolai Jonasson (https://sketchfab.com/nikolaijonasson)
license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
source: https://sketchfab.com/3d-models/female-marble-statue-polished-but-old-41b024813afd49fb827d942219d89b93
title: Female Marble Statue (Polished but old)
*/

import * as THREE from "three";
import { useRef } from "react";
import { useGLTF, useTexture, shaderMaterial } from "@react-three/drei";
import { useFrame, extend, useThree } from "@react-three/fiber";
import VibrantFragment from "../shaders/vibrant/fragment.glsl";
import VibrantVertex from "../shaders/vibrant/vertex.glsl";
import graffitiTexture from "/graffiti.jpg";
console.log(graffitiTexture);
// type GLTFResult = GLTF & {
// 	nodes: {
// 		defaultMaterial: THREE.Mesh;
// 		defaultMaterial_1: THREE.Mesh;
// 	};
// 	materials: {
// 		Eye_brown: THREE.MeshStandardMaterial;
// 		Material_001: THREE.MeshStandardMaterial;
// 	};
// };

const DavidGraffitiShaderMaterial = shaderMaterial(
	{
		uTime: 0,
		lightPos: new THREE.Vector3(),
		graffitiTexture: new THREE.TextureLoader().load(graffitiTexture),
		cameraPosition: new THREE.Vector3(),
	},
	VibrantVertex,
	VibrantFragment
);
extend({ DavidGraffitiShaderMaterial });

export function David(props) {
	const camera = useThree((state) => state.camera);
	console.log("camera pos", camera);

	const { nodes, materials } = useGLTF(
		"david.glb"
	);

	const davidGraffitiShaderMaterialRef = useRef();

	// console.log(femaleVibrantShaderMaterialRef.current)

	useFrame((state, delta) => {
		davidGraffitiShaderMaterialRef.current.uTime += delta;
		davidGraffitiShaderMaterialRef.current.cameraPosition = camera.position;
	});

	const { lightPos } = { ...props };

	console.log(lightPos);
	console.log(props);
	return (
		<group
			{...props}
			dispose={null}
		>
			<mesh
				castShadow
				receiveShadow
				geometry={nodes.b56becd5ff494f408227f635b1929f0f.geometry}
				//   material={nodes.b56becd5ff494f408227f635b1929f0f.material}
				position={[-0.27, 3.34, -0.24]}
				rotation={[Math.PI / 2, 0, 0]}
			>
				<davidGraffitiShaderMaterial
					ref={davidGraffitiShaderMaterialRef}
					side={THREE.DoubleSide}
					lightPos={lightPos}
					// abstractTexture={abstractTexture}
				/>
			</mesh>
		</group>
	);
}

useGLTF.preload("david.glb");
